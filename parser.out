Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    OR

Grammar

Rule 0     S' -> block
Rule 1     block -> block statement
Rule 2     block -> statement
Rule 3     statement -> expression SEMICOLON
Rule 4     expression -> expression PLUS expression
Rule 5     expression -> expression MINUS expression
Rule 6     expression -> expression TIMES expression
Rule 7     expression -> expression DIVIDE expression
Rule 8     expression -> MINUS expression
Rule 9     expression -> LPAREN expression RPAREN
Rule 10    expression -> NUMBER
Rule 11    expression -> NAME
Rule 12    statement -> NAME EQUAL expression SEMICOLON
Rule 13    empty -> <empty>
Rule 14    statement -> expression COMP_EQ expression
Rule 15    statement -> expression COMP_LE expression
Rule 16    statement -> expression COMP_GR expression
Rule 17    statement -> expression COMP_DIFF expression
Rule 18    statement -> expression COMP_EQ_GR expression
Rule 19    statement -> expression COMP_EQ_LE expression

Terminals, with rules where they appear

AND                  : 
COMP_DIFF            : 17
COMP_EQ              : 14
COMP_EQ_GR           : 18
COMP_EQ_LE           : 19
COMP_GR              : 16
COMP_LE              : 15
DIVIDE               : 7
EQUAL                : 12
LPAREN               : 9
MINUS                : 5 8
NAME                 : 11 12
NUMBER               : 10
OR                   : 
PLUS                 : 4
RPAREN               : 9
SEMICOLON            : 3 12
TIMES                : 6
error                : 

Nonterminals, with rules where they appear

block                : 1 0
empty                : 
expression           : 3 4 4 5 5 6 6 7 7 8 9 12 14 14 15 15 16 16 17 17 18 18 19 19
statement            : 1 2

Parsing method: LALR

state 0

    (0) S' -> . block
    (1) block -> . block statement
    (2) block -> . statement
    (3) statement -> . expression SEMICOLON
    (12) statement -> . NAME EQUAL expression SEMICOLON
    (14) statement -> . expression COMP_EQ expression
    (15) statement -> . expression COMP_LE expression
    (16) statement -> . expression COMP_GR expression
    (17) statement -> . expression COMP_DIFF expression
    (18) statement -> . expression COMP_EQ_GR expression
    (19) statement -> . expression COMP_EQ_LE expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . MINUS expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . NAME

    NAME            shift and go to state 4
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7

    block                          shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 3

state 1

    (0) S' -> block .
    (1) block -> block . statement
    (3) statement -> . expression SEMICOLON
    (12) statement -> . NAME EQUAL expression SEMICOLON
    (14) statement -> . expression COMP_EQ expression
    (15) statement -> . expression COMP_LE expression
    (16) statement -> . expression COMP_GR expression
    (17) statement -> . expression COMP_DIFF expression
    (18) statement -> . expression COMP_EQ_GR expression
    (19) statement -> . expression COMP_EQ_LE expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . MINUS expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . NAME

    NAME            shift and go to state 4
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7

    statement                      shift and go to state 8
    expression                     shift and go to state 3

state 2

    (2) block -> statement .

    NAME            reduce using rule 2 (block -> statement .)
    MINUS           reduce using rule 2 (block -> statement .)
    LPAREN          reduce using rule 2 (block -> statement .)
    NUMBER          reduce using rule 2 (block -> statement .)
    $end            reduce using rule 2 (block -> statement .)


state 3

    (3) statement -> expression . SEMICOLON
    (14) statement -> expression . COMP_EQ expression
    (15) statement -> expression . COMP_LE expression
    (16) statement -> expression . COMP_GR expression
    (17) statement -> expression . COMP_DIFF expression
    (18) statement -> expression . COMP_EQ_GR expression
    (19) statement -> expression . COMP_EQ_LE expression
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 9
    COMP_EQ         shift and go to state 10
    COMP_LE         shift and go to state 11
    COMP_GR         shift and go to state 12
    COMP_DIFF       shift and go to state 13
    COMP_EQ_GR      shift and go to state 14
    COMP_EQ_LE      shift and go to state 15
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 4

    (12) statement -> NAME . EQUAL expression SEMICOLON
    (11) expression -> NAME .

    EQUAL           shift and go to state 20
    SEMICOLON       reduce using rule 11 (expression -> NAME .)
    COMP_EQ         reduce using rule 11 (expression -> NAME .)
    COMP_LE         reduce using rule 11 (expression -> NAME .)
    COMP_GR         reduce using rule 11 (expression -> NAME .)
    COMP_DIFF       reduce using rule 11 (expression -> NAME .)
    COMP_EQ_GR      reduce using rule 11 (expression -> NAME .)
    COMP_EQ_LE      reduce using rule 11 (expression -> NAME .)
    PLUS            reduce using rule 11 (expression -> NAME .)
    MINUS           reduce using rule 11 (expression -> NAME .)
    TIMES           reduce using rule 11 (expression -> NAME .)
    DIVIDE          reduce using rule 11 (expression -> NAME .)


state 5

    (8) expression -> MINUS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . MINUS expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . NAME

    MINUS           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    NAME            shift and go to state 22

    expression                     shift and go to state 21

state 6

    (9) expression -> LPAREN . expression RPAREN
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . MINUS expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . NAME

    MINUS           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    NAME            shift and go to state 22

    expression                     shift and go to state 23

state 7

    (10) expression -> NUMBER .

    SEMICOLON       reduce using rule 10 (expression -> NUMBER .)
    COMP_EQ         reduce using rule 10 (expression -> NUMBER .)
    COMP_LE         reduce using rule 10 (expression -> NUMBER .)
    COMP_GR         reduce using rule 10 (expression -> NUMBER .)
    COMP_DIFF       reduce using rule 10 (expression -> NUMBER .)
    COMP_EQ_GR      reduce using rule 10 (expression -> NUMBER .)
    COMP_EQ_LE      reduce using rule 10 (expression -> NUMBER .)
    PLUS            reduce using rule 10 (expression -> NUMBER .)
    MINUS           reduce using rule 10 (expression -> NUMBER .)
    TIMES           reduce using rule 10 (expression -> NUMBER .)
    DIVIDE          reduce using rule 10 (expression -> NUMBER .)
    RPAREN          reduce using rule 10 (expression -> NUMBER .)
    NAME            reduce using rule 10 (expression -> NUMBER .)
    LPAREN          reduce using rule 10 (expression -> NUMBER .)
    NUMBER          reduce using rule 10 (expression -> NUMBER .)
    $end            reduce using rule 10 (expression -> NUMBER .)


state 8

    (1) block -> block statement .

    NAME            reduce using rule 1 (block -> block statement .)
    MINUS           reduce using rule 1 (block -> block statement .)
    LPAREN          reduce using rule 1 (block -> block statement .)
    NUMBER          reduce using rule 1 (block -> block statement .)
    $end            reduce using rule 1 (block -> block statement .)


state 9

    (3) statement -> expression SEMICOLON .

    NAME            reduce using rule 3 (statement -> expression SEMICOLON .)
    MINUS           reduce using rule 3 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 3 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 3 (statement -> expression SEMICOLON .)
    $end            reduce using rule 3 (statement -> expression SEMICOLON .)


state 10

    (14) statement -> expression COMP_EQ . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . MINUS expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . NAME

    MINUS           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    NAME            shift and go to state 22

    expression                     shift and go to state 24

state 11

    (15) statement -> expression COMP_LE . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . MINUS expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . NAME

    MINUS           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    NAME            shift and go to state 22

    expression                     shift and go to state 25

state 12

    (16) statement -> expression COMP_GR . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . MINUS expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . NAME

    MINUS           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    NAME            shift and go to state 22

    expression                     shift and go to state 26

state 13

    (17) statement -> expression COMP_DIFF . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . MINUS expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . NAME

    MINUS           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    NAME            shift and go to state 22

    expression                     shift and go to state 27

state 14

    (18) statement -> expression COMP_EQ_GR . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . MINUS expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . NAME

    MINUS           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    NAME            shift and go to state 22

    expression                     shift and go to state 28

state 15

    (19) statement -> expression COMP_EQ_LE . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . MINUS expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . NAME

    MINUS           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    NAME            shift and go to state 22

    expression                     shift and go to state 29

state 16

    (4) expression -> expression PLUS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . MINUS expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . NAME

    MINUS           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    NAME            shift and go to state 22

    expression                     shift and go to state 30

state 17

    (5) expression -> expression MINUS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . MINUS expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . NAME

    MINUS           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    NAME            shift and go to state 22

    expression                     shift and go to state 31

state 18

    (6) expression -> expression TIMES . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . MINUS expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . NAME

    MINUS           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    NAME            shift and go to state 22

    expression                     shift and go to state 32

state 19

    (7) expression -> expression DIVIDE . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . MINUS expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . NAME

    MINUS           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    NAME            shift and go to state 22

    expression                     shift and go to state 33

state 20

    (12) statement -> NAME EQUAL . expression SEMICOLON
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . MINUS expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . NAME

    MINUS           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7
    NAME            shift and go to state 22

    expression                     shift and go to state 34

state 21

    (8) expression -> MINUS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 8 (expression -> MINUS expression .)
    COMP_EQ         reduce using rule 8 (expression -> MINUS expression .)
    COMP_LE         reduce using rule 8 (expression -> MINUS expression .)
    COMP_GR         reduce using rule 8 (expression -> MINUS expression .)
    COMP_DIFF       reduce using rule 8 (expression -> MINUS expression .)
    COMP_EQ_GR      reduce using rule 8 (expression -> MINUS expression .)
    COMP_EQ_LE      reduce using rule 8 (expression -> MINUS expression .)
    PLUS            reduce using rule 8 (expression -> MINUS expression .)
    MINUS           reduce using rule 8 (expression -> MINUS expression .)
    TIMES           reduce using rule 8 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 8 (expression -> MINUS expression .)
    RPAREN          reduce using rule 8 (expression -> MINUS expression .)
    NAME            reduce using rule 8 (expression -> MINUS expression .)
    LPAREN          reduce using rule 8 (expression -> MINUS expression .)
    NUMBER          reduce using rule 8 (expression -> MINUS expression .)
    $end            reduce using rule 8 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 17 ]
  ! TIMES           [ shift and go to state 18 ]
  ! DIVIDE          [ shift and go to state 19 ]


state 22

    (11) expression -> NAME .

    PLUS            reduce using rule 11 (expression -> NAME .)
    MINUS           reduce using rule 11 (expression -> NAME .)
    TIMES           reduce using rule 11 (expression -> NAME .)
    DIVIDE          reduce using rule 11 (expression -> NAME .)
    SEMICOLON       reduce using rule 11 (expression -> NAME .)
    COMP_EQ         reduce using rule 11 (expression -> NAME .)
    COMP_LE         reduce using rule 11 (expression -> NAME .)
    COMP_GR         reduce using rule 11 (expression -> NAME .)
    COMP_DIFF       reduce using rule 11 (expression -> NAME .)
    COMP_EQ_GR      reduce using rule 11 (expression -> NAME .)
    COMP_EQ_LE      reduce using rule 11 (expression -> NAME .)
    RPAREN          reduce using rule 11 (expression -> NAME .)
    NAME            reduce using rule 11 (expression -> NAME .)
    LPAREN          reduce using rule 11 (expression -> NAME .)
    NUMBER          reduce using rule 11 (expression -> NAME .)
    $end            reduce using rule 11 (expression -> NAME .)


state 23

    (9) expression -> LPAREN expression . RPAREN
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 35
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 24

    (14) statement -> expression COMP_EQ expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for MINUS resolved as shift
    NAME            reduce using rule 14 (statement -> expression COMP_EQ expression .)
    LPAREN          reduce using rule 14 (statement -> expression COMP_EQ expression .)
    NUMBER          reduce using rule 14 (statement -> expression COMP_EQ expression .)
    $end            reduce using rule 14 (statement -> expression COMP_EQ expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19

  ! MINUS           [ reduce using rule 14 (statement -> expression COMP_EQ expression .) ]


state 25

    (15) statement -> expression COMP_LE expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for MINUS resolved as shift
    NAME            reduce using rule 15 (statement -> expression COMP_LE expression .)
    LPAREN          reduce using rule 15 (statement -> expression COMP_LE expression .)
    NUMBER          reduce using rule 15 (statement -> expression COMP_LE expression .)
    $end            reduce using rule 15 (statement -> expression COMP_LE expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19

  ! MINUS           [ reduce using rule 15 (statement -> expression COMP_LE expression .) ]


state 26

    (16) statement -> expression COMP_GR expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for MINUS resolved as shift
    NAME            reduce using rule 16 (statement -> expression COMP_GR expression .)
    LPAREN          reduce using rule 16 (statement -> expression COMP_GR expression .)
    NUMBER          reduce using rule 16 (statement -> expression COMP_GR expression .)
    $end            reduce using rule 16 (statement -> expression COMP_GR expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19

  ! MINUS           [ reduce using rule 16 (statement -> expression COMP_GR expression .) ]


state 27

    (17) statement -> expression COMP_DIFF expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for MINUS resolved as shift
    NAME            reduce using rule 17 (statement -> expression COMP_DIFF expression .)
    LPAREN          reduce using rule 17 (statement -> expression COMP_DIFF expression .)
    NUMBER          reduce using rule 17 (statement -> expression COMP_DIFF expression .)
    $end            reduce using rule 17 (statement -> expression COMP_DIFF expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19

  ! MINUS           [ reduce using rule 17 (statement -> expression COMP_DIFF expression .) ]


state 28

    (18) statement -> expression COMP_EQ_GR expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for MINUS resolved as shift
    NAME            reduce using rule 18 (statement -> expression COMP_EQ_GR expression .)
    LPAREN          reduce using rule 18 (statement -> expression COMP_EQ_GR expression .)
    NUMBER          reduce using rule 18 (statement -> expression COMP_EQ_GR expression .)
    $end            reduce using rule 18 (statement -> expression COMP_EQ_GR expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19

  ! MINUS           [ reduce using rule 18 (statement -> expression COMP_EQ_GR expression .) ]


state 29

    (19) statement -> expression COMP_EQ_LE expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for MINUS resolved as shift
    NAME            reduce using rule 19 (statement -> expression COMP_EQ_LE expression .)
    LPAREN          reduce using rule 19 (statement -> expression COMP_EQ_LE expression .)
    NUMBER          reduce using rule 19 (statement -> expression COMP_EQ_LE expression .)
    $end            reduce using rule 19 (statement -> expression COMP_EQ_LE expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19

  ! MINUS           [ reduce using rule 19 (statement -> expression COMP_EQ_LE expression .) ]


state 30

    (4) expression -> expression PLUS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 4 (expression -> expression PLUS expression .)
    COMP_EQ         reduce using rule 4 (expression -> expression PLUS expression .)
    COMP_LE         reduce using rule 4 (expression -> expression PLUS expression .)
    COMP_GR         reduce using rule 4 (expression -> expression PLUS expression .)
    COMP_DIFF       reduce using rule 4 (expression -> expression PLUS expression .)
    COMP_EQ_GR      reduce using rule 4 (expression -> expression PLUS expression .)
    COMP_EQ_LE      reduce using rule 4 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 4 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 4 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 4 (expression -> expression PLUS expression .)
    NAME            reduce using rule 4 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 4 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 4 (expression -> expression PLUS expression .)
    $end            reduce using rule 4 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19

  ! TIMES           [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 17 ]


state 31

    (5) expression -> expression MINUS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 5 (expression -> expression MINUS expression .)
    COMP_EQ         reduce using rule 5 (expression -> expression MINUS expression .)
    COMP_LE         reduce using rule 5 (expression -> expression MINUS expression .)
    COMP_GR         reduce using rule 5 (expression -> expression MINUS expression .)
    COMP_DIFF       reduce using rule 5 (expression -> expression MINUS expression .)
    COMP_EQ_GR      reduce using rule 5 (expression -> expression MINUS expression .)
    COMP_EQ_LE      reduce using rule 5 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 5 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 5 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 5 (expression -> expression MINUS expression .)
    NAME            reduce using rule 5 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 5 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 5 (expression -> expression MINUS expression .)
    $end            reduce using rule 5 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19

  ! TIMES           [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 17 ]


state 32

    (6) expression -> expression TIMES expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 6 (expression -> expression TIMES expression .)
    COMP_EQ         reduce using rule 6 (expression -> expression TIMES expression .)
    COMP_LE         reduce using rule 6 (expression -> expression TIMES expression .)
    COMP_GR         reduce using rule 6 (expression -> expression TIMES expression .)
    COMP_DIFF       reduce using rule 6 (expression -> expression TIMES expression .)
    COMP_EQ_GR      reduce using rule 6 (expression -> expression TIMES expression .)
    COMP_EQ_LE      reduce using rule 6 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 6 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 6 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 6 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 6 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 6 (expression -> expression TIMES expression .)
    NAME            reduce using rule 6 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 6 (expression -> expression TIMES expression .)
    NUMBER          reduce using rule 6 (expression -> expression TIMES expression .)
    $end            reduce using rule 6 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 17 ]
  ! TIMES           [ shift and go to state 18 ]
  ! DIVIDE          [ shift and go to state 19 ]


state 33

    (7) expression -> expression DIVIDE expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 7 (expression -> expression DIVIDE expression .)
    COMP_EQ         reduce using rule 7 (expression -> expression DIVIDE expression .)
    COMP_LE         reduce using rule 7 (expression -> expression DIVIDE expression .)
    COMP_GR         reduce using rule 7 (expression -> expression DIVIDE expression .)
    COMP_DIFF       reduce using rule 7 (expression -> expression DIVIDE expression .)
    COMP_EQ_GR      reduce using rule 7 (expression -> expression DIVIDE expression .)
    COMP_EQ_LE      reduce using rule 7 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 7 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 7 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 7 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 7 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 7 (expression -> expression DIVIDE expression .)
    NAME            reduce using rule 7 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 7 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 7 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 7 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 17 ]
  ! TIMES           [ shift and go to state 18 ]
  ! DIVIDE          [ shift and go to state 19 ]


state 34

    (12) statement -> NAME EQUAL expression . SEMICOLON
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 36
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 35

    (9) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    COMP_EQ         reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    COMP_LE         reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    COMP_GR         reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    COMP_DIFF       reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    COMP_EQ_GR      reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    COMP_EQ_LE      reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    NAME            reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 9 (expression -> LPAREN expression RPAREN .)


state 36

    (12) statement -> NAME EQUAL expression SEMICOLON .

    NAME            reduce using rule 12 (statement -> NAME EQUAL expression SEMICOLON .)
    MINUS           reduce using rule 12 (statement -> NAME EQUAL expression SEMICOLON .)
    LPAREN          reduce using rule 12 (statement -> NAME EQUAL expression SEMICOLON .)
    NUMBER          reduce using rule 12 (statement -> NAME EQUAL expression SEMICOLON .)
    $end            reduce using rule 12 (statement -> NAME EQUAL expression SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 24 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 25 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 26 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 27 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 28 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 29 resolved as shift
